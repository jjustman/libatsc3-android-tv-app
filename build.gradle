// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.31"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.5'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.5.2'
        if (project.getProperty('org.gradle.project.use_local_src_middleware_folder').toBoolean()) {
            classpath 'de.mobilej.unmock:UnMockPlugin:0.7.6'
        }

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "net.linguica.maven-settings" version "0.5"
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        if (!project.getProperty('org.gradle.project.use_local_src_middleware_folder').toBoolean()) {
            maven {
                url 'https://pkgs.dev.azure.com/NGWP/Middleware/_packaging/nextgen/maven/v1'
                name 'nextgen'
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
        maven {
            url 'https://pkgs.dev.azure.com/NGWP/Middleware/_packaging/middleware/maven/v1'
            name 'middleware'
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

subprojects {
    apply plugin: 'net.linguica.maven-settings'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    minSdkVersion = 28
    compileSdkVersion = 30
    targetSdkVersion = 30
    buildToolsVersion = "29.0.2"
    coreKtxVersion = '1.3.2'
    daggerVersion = '2.28.1'
    lifecycleVersion = '2.3.1'
    exoplayerVersion = "2.10.7.10"
    coroutinesVersion = "1.4.1"
    if (project.getProperty('org.gradle.project.use_local_src_middleware_folder').toBoolean()) {
        libatsc3Version = "1.2.2"
        startupRuntime = '1.0.0'
    } else {
        middlewareVersion = '1.6.0'
    }
}